<?xml version="1.0" encoding="UTF-8"?> 
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
    	http://www.springframework.org/schema/beans 
    	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
    	http://www.springframework.org/schema/context 
    	http://www.springframework.org/schema/context/spring-context-4.0.xsd 
   		http://www.springframework.org/schema/tx
    	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
   		http://www.springframework.org/schema/aop
    	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
    	
	<!-- spring datasource. -->
	<bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource" >
	    <property name="alias" value="proxool-demodb" />
		<property name="driver" value="com.mysql.jdbc.Driver" />
	    <property name="driverUrl" value="jdbc:mysql://localhost:3306/demodb" />
	    <property name="user" value="demo" />
	    <property name="password" value="password" />
    	<property name="maximumConnectionCount" value="50" />
    	<property name="minimumConnectionCount" value="10" />
    	
	 </bean>  
    
	<bean id="persistenceProvider" class="org.hibernate.jpa.HibernatePersistenceProvider"/> 
	<bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="generateDdl" value="false" />
		<property name="database" value="HSQL"/>
	</bean>
	<bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
	
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml"/>
		<property name="persistenceUnitName" value="demodb"/>
		<property name="persistenceProvider" ref="persistenceProvider"/>
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>
		<property name="jpaDialect" ref="jpaDialect"/>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop> 
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop> 
                 <!--<prop key="hibernate.id.new_generator_mappings">true</prop> 
				 <prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.connection.autocommit">false</prop>-->
			</props>
		</property>
	</bean>
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">  
        <!--  <property name="dataSource" ref="dataSource"/>  -->
        <property name="entityManagerFactory"  ref="entityManagerFactory"/>  
    </bean> 
       
    <bean id="persistenceExceptionTranslationPostProcessor"  class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	<bean id="persistenceAnnotationBeanPostProcessor" class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/> 
    

    <tx:annotation-driven transaction-manager="transactionManager" />

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" rollback-for="java.lang.Exception.class" />
		</tx:attributes>
 	</tx:advice>
 
    <aop:config>  
        <aop:aspect id="TestAspect" ref="aspectBean">  
            <!--配置com.spring.service包下所有类或接口的所有方法-->  
            <aop:pointcut id="businessService" expression="execution(* com.democms.service.*.*.*(..))" />  
            <aop:before pointcut-ref="businessService" method="doBefore"/>  
            <aop:after pointcut-ref="businessService" method="doAfter"/>  
            <aop:around pointcut-ref="businessService" method="doAround"/>  
            <aop:after-throwing pointcut-ref="businessService" method="doThrowing" throwing="ex"/>  
        </aop:aspect>  
    </aop:config>  
    
 
</beans>











